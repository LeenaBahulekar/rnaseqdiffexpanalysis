/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    rnaseqdiffexpenanalysis Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
	TODO - check if prefix not given-will diff exp emit the reference file
----------------------------------------------------------------------------------------
*/


params {
	//	Supported tools are: DESeq2.
	DGE_tool = "DESeq2"

	//	Feature (rows) x Sample (columns) expression file in CSV or TSV format
	count_file = null
	
	//	Column number in --counts_file which contains gene identifiers.
	gene_id_column = 1
	
	//	Starting column number containing the expression data values.
	count_column = 3
	
	/*
		A raw count value used for pre-filtering genes; If --use_CPM_cutoff is set FALSE, 
		then pre-filtering will be done only using --counts_threshold. In that case, only 
		those genes which have total counts across all samples more than this value will get 
		selected for downstream analysis. If --use_CPM_cutoff is set TRUE, a gene will 
		considered to be expressed at biologically meaningful level in a sample if its 
		abundance in Counts-Per-Million (CPM) unit is greater than the CPM value calculated
		on this raw count for the least sequenced sample. For example, if --counts_threshold 
		is 10 and library size of least sequenced sample is 10,000,000, then biological 
		meaningful expression level will be (10/10000000)*1000000 = 1 CPM. In such case, 
		--sample_coverage_threshold will also be considered, e.g., if --sample_coverage_threshold 
		is set to 0.5, then all genes with abundance value of at least 1 CPM in at least 50% 
		samples will be considered for downstream analysis. 
	*/
	counts_threshold = 10
	
	/*
		Whether a cutoff calculated on --counts_threshold and library size of the least sequenced 
		sample will be used for pre-filtering on counts data. Already described above.
	*/
	use_CPM_cutoff = true
	
	/*
		A feature will be discarded if not abundant at biologically meaningful level in at least
		this fraction of samples. This is applicable only when --use_CPM_cutoff is set TRUE.
		Range: 0.0 - 1.0;
	*/
	sample_coverage_threshold = 0.5
	
	// Supported methods are:  DESeq2-median-of-ratios.
	normalization_method = "DESeq2-median-of-ratios"
	
	/*
		It is a positive constant to avoid taking log of 0 or any negative values. Useful across 
		data filter, normalization and transformation steps. 
	*/
	pseudocounts = 0
	
	//	A sample metadata file (in TSV/CSV) with list of samples of interest. 
	sample_info_file = null

	//	Column number for sample ids.
	sample_id_column = 1
	
	//	Column number for the primary factor of interest such as sample conditions/groups.
	primary_factor_column = 5
	
	/*
		Comma separated list of contrasts for DGE in the defined format: cond2_vs_cond1 where 
		cond1 and cond2 should be values from primary_factor_column. Applicable only for pairwise 
		DGE analysis such as Wald test from DESeq2. With value as all, all pair wise combinations
		will be considered
	*/
	contrasts = "all"
	
	/*	Comma separated list of column numbers of sample_info_file which can act as other 
		possible source of variation in gene expression.
	*/
	other_known_factors_columns = null
	
	/*
		Design formula for full model. If defined, it will get preference over 
		--primary_factor_column and --other_known_factors_columns. If not provided, it will 
		be defined based on both parameters, e.g., '~ genotype + condition'. Interaction 
		terms are supported, so user can specify something like 
		'~ condition + time + condition:time'.
	*/
	full_design = null
	
	/*
		Design formula for reduced model. If defined, it will get preference over 
		--other_known_factors_columns. If not provided, it will be defined based on 
		--other_known_factors_columns, e.g., '~ genotype'.
	*/
	reduced_design = null
	
	//	Method to estimate dispersion such as parametric/local/mean/glmGamPoi.
	DESeq2_dispersion_method = "parametric"
	
	//	Type of statistical test such as Wald/LRT.
	DESeq2_test_type = "Wald"
	
	/*
		Type of measurement for statistical significance level, pvalue, padj or svalue. 
		svalue is only applicable for --DESeq2_test_type = Wald.
	*/
	stat_sig_measure = "padj"
	
	//	Cutoff for calling differentially expressed genes. Comma-separated if multiple.
	stat_cutoff = "0.05"
	
	/*
		log2-fold-change cutoff for calling differentially expressed genes. Applicable only 
		for DESeq2_test_type = Wald. Comma-separated values if multiple.
	*/
	log2_fold_change_cutoff = "1"
	
	/*
		n most variable genes will be considered for generating following plots: 
		clustered heatmaps, MDS. Comma-separated values if multiple. 
		NULL, means all genes will be considered.
	*/
	top_n_for_viz = null
	
	//	Output directory name.
	output_dir = "DGE_results"
	
	//	Prefix for output files.
	output_prefix = "DGE"
	
	//	Log file.
	log_file = "DGE.log"
	
	//	Directory path where the results of the pipeline need to be published
	outdir = null
	
	//	Directory for the gene drug process results
	gene_result_dir = "results"
	
	//	Log file for gene drug
	gene_drug_log_file = "Drug_Gene_association.log"
	
	/*
		Column name in --genelist_file which contains log2-fold-change values. This is 
		typically available if the gene list is an output of some differential expression 
		analysis.
	*/
	log2fc_column = "log2FoldChange"
	
	//	Column number in --genelist_file which contains gene identifiers. 
	genedrug_gene_id_column = 1
	
	//	PPI file in CSV or TSV format.
	ppi_file = null
	
	//Drug-Target mapping file in TSV format.
	drug_target_file = null
	
	//	Column number in --genelist_file which contains gene identifiers.
	pathway_gene_id_column = 1
	
	/*
		Column number to be used for log2-fold-change information in the --genelist_file. 
		In DESeq2, if statistical significance measure is pvalue or padj, the moderated 
		log2fc is usually available in column number 5. If, however, the statistical 
		significance measure is svalue, shrunken log2fc is estimated by 'apeglm' method 
		and the estimated value is typically available in column number 10.
	*/
	pathway_log2fc_column = 4
	
	/*
		List of reference gene list in CSV or TSV format. This is used in 
		over-representation analysis (ORA) and topology based analysis (SPIA). Gene set 
		enrichment analysis (GSEA) does not require this list. It should include all entries 
		from --genelist_file. Typically, it the list of all genes which are part of the study,
		for example, it could be list of genes after abundance based filter that goes into 
		differential expression analysis.
	*/
	reference_genelist_file = null
	
	//	Column number in --reference_genelist_file which contains gene identifiers. 
	ref_gene_id_column = 1
	
	/*
		Name of the species. This will be used to retrieve species-specific annotation data 
		sources for enrichment analysis. Currently only tested for following: Homo sapiens.
	*/
	species = "Homo sapiens"
	
	/*
		Comma separated list of data sources for analysis, such as MSigDBHallmarks,
		MSigDBOncogenic,MSigDBImmunologic,DO,NCG,DisGeNET,GOBP,GOCC,GOMF,KEGG,Reactome.
	*/
	data_sources = "all"
	
	//	Whether to run SPIA. It requires --log2fc_column.
	run_SPIA = true
	
	/*
		A numerical threshold (between 0 and 1) on p.adjust to infer geneset/pathway 
		significance.
	*/
	threshold = 0.1
	
	//	Result directory for Pathway Enrichment results.
	pathway_result_dir =  "results"
	
	//	Prefix for Pathway Enrichment output files.
    pathway_output_prefix = "PE"
	
	//	Log file for Pathway Enrichment process
	pathway_log_file = "Functional_enrichment.log"

    // Column number in --genelist_file which contains gene identifiers.
	annotation_gene_id_column = 1

    // result dir for Annotation using Open target results
    annotation_result_dir = "results"

    // Prefix for results for Annotation with Open target
    annotation_output_prefix = "AOT"

    // Log file for Annotation with Open Targets
    annotation_log_file = "Annotation_with_OpenTargets.log"
	
}

docker {
    enabled = true
}
trace {
	enabled = true
	overwrite = true
}
report {
	enabled = true
	overwrite = true
}
dag {
    enabled = true
	overwrite = true
}